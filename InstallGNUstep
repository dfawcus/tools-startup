#!/bin/sh

#--------------------------------------------------------------------
# Check the shell
#--------------------------------------------------------------------
case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='      ' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac


#--------------------------------------------------------------------
# Misc setup
#--------------------------------------------------------------------

SRCDIR=`pwd`
BUILDDIR=$SRCDIR/build
SOURCESDIR=$SRCDIR/sources

# Make sure GNUSTEP_SYSTEM_ROOT has a /System at the end
# in case the user set it themselves.
if test -n "$GNUSTEP_SYSTEM_ROOT"; then
  if test \! "`basename $GNUSTEP_SYSTEM_ROOT`" = System; then
    if test "x$GNUSTEP_SYSTEM_ROOT" = "x/"; then
      GNUSTEP_SYSTEM_ROOT=/System
    else
      GNUSTEP_SYSTEM_ROOT="$GNUSTEP_SYSTEM_ROOT/System"
    fi
  fi
fi

. scripts/common.sh
. scripts/platform.sh

gs_platform

LIB_COMBO=gnu-gnu-gnu

if [ -z "$MAKE" ]; then
  if gmake -v >/dev/null 2>&1
  then
    MAKE=gmake
  else
    MAKE=make
  fi
fi

#--------------------------------------------------------------------
# Welcome
#--------------------------------------------------------------------
clear
echo
echo
echo
echo "                          GNUstep Installation"
echo
echo
echo "     This is an automatic installation script for GNUstep."
echo 
echo "This script tries to build and install the core libraries for"
echo "GNUstep. Log files of the build process are kept so that if some"
echo "part of the build does not work, you can send the log files to"
echo "our attention (at bug-gnustep@gnu.org). From these we can try to"
echo "determine what the problem is."
echo
echo

#--------------------------------------------------------------------
# Check how we can install (as root, sudo, home dir, etc)
#--------------------------------------------------------------------
HAVE_SUDO=no
NO_PRIV=no
WHOAMI=none
which whoami 2>&1 > /dev/null
if [ $? = 0 ]; then
  WHOAMI=`whoami`
elif [ -f /usr/ucb/whoami ]; then
  WHOAMI=`/usr/ucb/whoami`
else
  WHOAMI=`who am i | awk '{print $1}'`
fi
which sudo > /dev/null
if [ $? = 0 ]; then
  HAVE_SUDO=yes
fi
AS_ROOT=yes
if [ "$WHOAMI" != root ]; then
  AS_ROOT=no
  echo WARNING: You are not logged in as root
  echo
  echo GNUstep needs to be installed with root privileges. If you
  echo do not have root privileges, you can also install GNUstep if
  echo you have sudo access or you can install it in your home
  echo directory. If you have no idea what any of this means, you
  echo "should choose option two (2) below (or quit (option 9) and read "
  echo "your computer manual on installing programs as root)."
  echo
  echo "1) I have sudo access in order to install GNUstep"
  echo "2) I want to install GNUstep in my home directory"
  echo "3) I know what I'm doing and I don't need special permissions"
  echo "9) I want to quit and start over."
  echo $ECHO_N "Enter a number: $ECHO_C"
  read user_option
  case "$user_option" in
    1) if [ $HAVE_SUDO = no ]; then
         echo Cannot find sudo program. Make sure it is in your path
         exit 1
       fi;;
    2) GNUSTEP_SYSTEM_ROOT=$HOME/GNUstep/System
       export GNUSTEP_SYSTEM_ROOT
       NO_PRIV=yes
       HAVE_SUDO=no;;
    3) echo Installing as normal user in $GNUSTEP_SYSTEM_ROOT
       NO_PRIV=yes
       HAVE_SUDO=no;;
    *) exit 0;;
  esac
else
  echo $ECHO_N "Press the Return/Enter key to begin continue: $ECHO_C"
  read user_enter
  if [ "$user_enter" = q ]; then
    exit 0
  fi
fi

if [ $AS_ROOT = no -a $HAVE_SUDO = yes ]; then
  echo "***You will be prompted for a sudo password during installation ***"
fi

#--------------------------------------------------------------------
# Find GNUstep sources
#--------------------------------------------------------------------
FOUND_FFCALL=yes
FFCALL=`find $SOURCESDIR -name ffcall-1*`
if [ x$FFCALL = x ]; then
  FOUND_FFCALL=no
else
  FFCALL=`basename $FFCALL .tar.gz`
fi
FOUND_LIBOBJC=yes
LIBOBJC=`find $SOURCESDIR -name gnustep-objc*`
if [ x$LIBOBJC = x ]; then
  FOUND_LIBOBJC=no
else
  LIBOBJC=`basename $LIBOBJC .tar.gz`
fi

FOUND_SOURCES=yes
IS_CVS=no
if [ -d $SRCDIR/../core ]; then
  # Compile from CVS checkout
  IS_CVS=yes
  SOURCESDIR=$SRCDIR/../core
  BUILDDIR=$SOURCESDIR
  GMAKE=make
  GBASE=base
  GGUI=gui
  GBACK=back
else
  # Compile from tar.gz
  GMAKE=`find $SOURCESDIR -name gnustep-make*`
  if [ x$GMAKE = x ]; then
    echo Cannot find gnustep-make distribution
    FOUND_SOURCES=no
  fi
  GMAKE=`basename $GMAKE .tar.gz`
  GBASE=`find $SOURCESDIR -name gnustep-base*`
  if [ x$GBASE = x ]; then
    echo Cannot find gnustep-base distribution
    FOUND_SOURCES=no
  fi
  GBASE=`basename $GBASE .tar.gz`
  GGUI=`find $SOURCESDIR -name gnustep-gui*`
  if [ x$GGUI = x ]; then
    echo Cannot find gnustep-gui distribution
    FOUND_SOURCES=no
  fi
  GGUI=`basename $GGUI .tar.gz`
  GBACK=`find $SOURCESDIR -name gnustep-back*`
  if [ x$GBACK = x ]; then
    echo Cannot find gnustep-back distribution
    FOUND_SOURCES=no
  fi
  GBACK=`basename $GBACK .tar.gz`
fi

if [ $FOUND_SOURCES = no ]; then
  echo "******** Source files not found **********"
  echo "The sources directory in this package had no source packages"
  echo "which should have all the proper gnustep tar.gz files"
  echo "(e.g. gnustep-make-x.x.x.tar.gz)"
  echo "Contact bug-gnustep@gnu.org for help"
  exit 1
fi

#--------------------------------------------------------------------
# Configure
#--------------------------------------------------------------------
echo "Configuring for $gs_machine"
gs_flags
PKG_CPPFLAGS=CPPFLAGS=$GS_CPPFLAGS
PKG_LDFLAGS=LDFLAGS=$GS_LDFLAGS
echo $PKG_CPPFLAGS
echo $PKG_LDFLAGS

if [ \! -d $BUILDDIR ]; then
  mkdir $BUILDDIR
fi
if [ \! -d $BUILDDIR ]; then
  echo "************************************************************"
  echo "Cannot create the build directory $BUILDDIR."
  echo "trying to build in /tmp/gnustep"
  BUILDDIR=/tmp/gnustepbuild
  mkdir $BUILDDIR
fi
if [ \! -d $BUILDDIR ]; then
  echo "************************************************************"
  echo "Cannot create the build directory $BUILDDIR."
  echo "trying to build in your home directory...."
  BUILDDIR=$HOME/gnustepbuild
  mkdir $BUILDDIR
  if [ ! -d $BUILDDIR ]; then
    echo "No. that doesn't work either. Contact bug-gnustep@gnu.org for help"
    exit 1
  fi
fi
  
cd $BUILDDIR
if [ \! -d logs ]; then
  mkdir logs
fi

echo "******** Checking system for installation issues **********"
$SRCDIR/configure --with-library-combo=$LIB_COMBO $PKG_CPPFLAGS $PKG_LDFLAGS

cp config.log logs/00-config.log
cp $SRCDIR/setuperrors .
cp $SRCDIR/ErrorList .
cp $SRCDIR/ErrorList.awk .
./setuperrors
if [ $? != 0 ]; then
  rm -f logs.tar.gz
  tar -cf logs.tar logs
  gzip logs.tar
  echo "If you don't understand something or think a test is in error"
  echo "Please email bug-gnustep@gnu.org and send the $BUILDDIR/logs.tar.gz file"
  exit 1
fi
. setupvars

echo
echo Building in $BUILDDIR
if [ x$GNUSTEP_SYSTEM_ROOT = x ]; then
  echo "Installing in default location (usually /usr/GNUstep)"
else
  echo Installing in $GNUSTEP_SYSTEM_ROOT
fi
echo Library combo: $LIB_COMBO
echo

if [ "$FFCALL_INSTALLED" = no -a "$LIBFFI_INSTALLED" = no -a "$FOUND_FFCALL" = no ]; then
  echo "******** Source files not found **********"
  echo "Make sure there is a directory one level above this script directory"
  echo "named sources and that it has ffcall-1.8d.tar.gz present"
  echo "Download this file from ftp://ftp.gnustep.org/pub/gnustep/dev-libs"
  exit 1
fi

echo $ECHO_N "Press the Return/Enter key to begin building GNUstep: $ECHO_C"
read user_enter
echo

#--------------------------------------------------------------------
# GNUstep make
#--------------------------------------------------------------------

PLOG=01-make
PKG=$GMAKE
PKG_DISPLAY="GNUstep Make"
PKG_CONFIG=--with-library-combo=$LIB_COMBO
if [ $GNUSTEP_INSTALLED = yes ];then
  echo GNUstep Make already installed
else
  gs_build_package
fi

if [ x$GNUSTEP_SYSTEM_ROOT = x ]; then
  GNUSTEP_SYSTEM_ROOT=$GNUSTEP_SYSTEM_ROOT_CONFIG
fi

if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep.sh ]; then
  gs_log_error
  exit 1
fi

# Reset the environment, just to make sure it's clean.
if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep-reset.sh ]; then
    gs_save=$GNUSTEP_SYSTEM_ROOT
    . $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep-reset.sh
    GNUSTEP_SYSTEM_ROOT=$gs_save
    unset gs_save
fi
. $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep.sh

#--------------------------------------------------------------------
# Build pre-reqs
#--------------------------------------------------------------------
HAVE_RPM=no
which rpm > /dev/null
if [ $? = 0 ]; then
  HAVE_RPM=yes
fi
if [ x"$NORPM" = xyes ]; then
  HAVE_RPM=no
fi

PLOG=02-ffcall
PKG=$FFCALL
PKG_DISPLAY="ffcall"
PKG_CONFIG="--prefix=$GNUSTEP_SYSTEM_ROOT \
   --libdir=$GNUSTEP_SYSTEM_ROOT/Library/Libraries \
   --includedir=$GNUSTEP_SYSTEM_ROOT/Library/Headers"

REBUILD_MAKE=no
#Why is this here?
#if [ $NO_PRIV = yes ]; then
#  # Force install
#  FFCALL_INSTALLED=no
#fi
if [ $FFCALL_INSTALLED = yes ];then
  echo ffcall already installed
elif [ $LIBFFI_INSTALLED = yes ];then
  echo libffi already installed
else
  gs_build_package
  REBUILD_MAKE=yes
fi

PLOG=02-libobjc
PKG=$LIBOBJC
PKG_DISPLAY="libobjc"
PKG_CONFIG=NO
if [ $GCC_VERSION = 2 ]; then
  # Need to install our own version of libobjc
  if [ $GNUSTEP_CUSTOM_LIBOBJC != "NONE" ]; then
    echo Custom libobjc already installed
  elif [ $FOUND_LIBOBJC = no ]; then
    echo Warning: Could not find gnustep-objc sources to install
  else
  gs_build_package
  REBUILD_MAKE=yes
  fi
fi

# Need to check if libobjc and ffcall got installed...
if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Headers/objc/Object.h ]; then
  gs_log_error
  exit 1
fi

#--------------------------------------------------------------------
# GNUstep make
#--------------------------------------------------------------------

PLOG=03-make
PKG=$GMAKE
PKG_DISPLAY="GNUstep Make"
PKG_CONFIG=--with-library-combo=$LIB_COMBO
if [ $REBUILD_MAKE = no ];then
  echo No need to update GNUstep Make
else
  gs_build_package
fi

if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep.sh ]; then
  gs_log_error
  exit 1
fi

#--------------------------------------------------------------------
# GNUstep base
#--------------------------------------------------------------------

PLOG=04-base
PKG=$GBASE
PKG_DISPLAY="GNUstep Base"
PKG_CONFIG=
if [ "$GNUSTEP_BASE_INSTALLED" = yes ]; then
  echo $PKG_DISPLAY already installed
else
  gs_build_package
fi

if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Headers/Foundation/NSObject.h ]; then
  gs_log_error
  exit 1
fi

#--------------------------------------------------------------------
# GNUstep gui
#--------------------------------------------------------------------

PLOG=05-gui
PKG=$GGUI
PKG_DISPLAY="GNUstep Gui"
PKG_CONFIG=
if [ "$GNUSTEP_GUI_INSTALLED" = yes ]; then
  echo GNUstep Gui already installed
else
  gs_build_package
fi

if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Headers/AppKit/NSApplication.h ]; then
  gs_log_error
  exit 1
fi

#--------------------------------------------------------------------
# GNUstep back
#--------------------------------------------------------------------

PLOG=06-back
PKG=$GBACK
PKG_DISPLAY="GNUstep Back"
PKG_CONFIG=
if [ "$GNUSTEP_BACK_INSTALLED" = yes ]; then
  echo GNUstep Back already installed
else
  gs_build_package
fi

if [ \! -f $GNUSTEP_SYSTEM_ROOT/Library/Bundles/libgnustep-back.bundle/libgnustep-back ]; then
  gs_log_error
  exit 1
fi

#--------------------------------------------------------------------
# Finish 
#--------------------------------------------------------------------


echo "---------------------------------------------------------"
echo
echo Installation Finished
echo
echo "---------------------------------------------------------"
echo
echo "Now run the GNUstep initialization script (put this in your"
echo ".bashrc or other type of startup script). Note the '.' at the"
echo "beginning of the line."
echo ". $GNUSTEP_SYSTEM_ROOT/Library/Makefiles/GNUstep.sh"
echo
echo "Now you can install some applications and start using GNUstep"
echo "Look for a few applications in the AppSources directory. The"
echo "typical way to install an application is:"
echo "  tar -zxf MyApplication.tar.gz"
echo "  cd MyApplication"
echo "  make"
echo "  make install (as root, unless GNUstep is in your home dir)"
echo ""
echo "Then start the application:"
echo "  openapp MyApplication.app"
echo ""

